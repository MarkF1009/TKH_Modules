1.   When typing on the keyboard of a computer, the computer is waiting for a command to be written so it can do its job. The keyboard is always scanning to see which buttons are being pressed so it can follow what is being told. Once the computer gets the signal from the keyboard the computer will follow whatever operation is asked for them to do. Like pen and paper but in the tech world the pen is your finger and the keyboard is the paper it is recording whatever is being put down. The keyboard is really just waiting for the coder to press a button of characters that are symbols to the computer but translate into letters on the screen for the user to see and recognize, then take those letters to form words which over time form sentences which have a message for the computer to follow.  


2.  Computers use input and output to create experience by first using the input section to create the output experience. The input is the coding part that the computer will interpret to be shown as whatever web page or application that is being asked. Also input is what is put into the computer such as the mouse, keyboard, and microphone. Anyway, you’re giving data into the computer. The output is the final product. The output is what you’re watching on your monitor or listening to on your speakers. Both can be any format like text numbers, video games, or  images it didn’t matter. The input and output deals with the look and feel of the site. The elements that are broken down into categories on the page like the header, body, and footer parts of the page. Animation also plays a huge role in the full experience for users, having animation can either make or break a site. Too little animation the user may tend to get bored which can lead to poor performance, too much animation can overwhelm the user and no coder wants that to happen, and too long of animation can both be boring and overwhelming at the same time. Input and output helps create different elements to each web page, not all web pages look the same but some do run the exact same out with different design elements to them.   


3. Software products are essentially “infinitely reproducible nothings” because you can create anything at will but the product will be intangible. From the 1950s-1980s there were a small amount of people who took to technology to make our basic human needs meant. Such as knowing the time, scheduling a flight, and sending letters which is done by controlling the “machine” (computer). Coders make “infinitely reproducible nothings units of digital execution that is called software working to meet the needs of that marketplace. Whatever kind of application the coder decides to make that purpose of that software it to reach their desired target market to make money. 


4. The way code becomes software is by the coder writing characters down and the computer is waiting for a click for some input. A sequence of symbols typically keyboard characters saved to a file within the computer. Characters and symbols are called “code” into a well detailed list of instructions that the computer carries out by interconnected logic gates, therefore turning whatever code into a product that can be executed. That is the way code becomes software.


5. Algorithm is another word or phrase for “problem solver” a group of functions who’s only means is to find whatever answer or result(s) for the task at hand. Algorithms can also be mathematical entities and practical expressions of ideas. Algorithms convert words into text, break that into symbols matching those symbols with symbols and produce the result depending on the programming language when dealing with computers.


6. The principle DRY stands for “Don’t Repeat Yourself”. Create everything once and let the computer repeat it for you. So name things once, do things once, create functions once. Its one of the principles of software development geared towards reducing repetition when coding.


7. Objective-oriented programming is based on the concept of “objects” which can have data contained, in the forms of fields and code in a procedures form or methods. Objective-oriented programming computers programs are designed by making them interact with one another. With OOP programmers can define the data type for the data structure also well as types of operations meaning functions that can work when applied to the data structure. A filling system for code. OOP is really for those who work in a corporate environment. OOP programming gave programmers a great way to label things which is building up a library.


8. The relationship between code and data is that data is everywhere. Somes comes from third parties that gather information such as e-mails, posts, word documents, and user- created. Computers sometimes make their data. When coding data is the most talked about topic, when creating a website one needs to to receive the data out of a database and store it into the webpage. Data also depends on the topic at hand meaning where is this data coming from. For instance when tweeting on Twitter your “tweets” are considered data, IRS tax returns is the date, When writing a post on facebook that post becomes data as well. Every little thing that is done on the computer or any peace of technology data is being recorded and stored and this is why apps are always updating because of the new amount of data that is being stored within the system. Coding helps organize the old data and filter in the new data and help solve whatever problem or problems that need to be fixed. Data is everlasting and has no means to slow down or stop so always having coders makes managing that data much more realistic and easier to work from. The more data the more coders needed. 


9. Framework is more like a product pitch. Frameworks are abstractions in which the software already is providing generic functionality that can be changed by adding the user-written code. Providing specific software, Software frameworks comes with code libraries, tools sets as well as application programming interfaces (API) which bring together all different types of components to enable development for the project at hand. Frameworks also have a powerful influence on the kind of work the developer can execute. Framework helps both the input and the output of web development. It helps with the input because frameworks have code libraries already built for them and it affects the output because the final product will have instructions to follow the code.  


10. Debugging is programming. It’s when the code is not being executed right by the computer due to some errors. When the code is not running right that means that the code is broken, when running the broken code the computer screen will not put out the correct output design on the screen. The coder's main goal is to fix the code and when faced with difficult codes there are many sources to find the answer to the problem from a community that has been built and developed for coders called Stack Overflow. Which is an environment for programmers from different ranges leaving their answers as well as comments for the following question. Your answers are being answered by seniors, juniors, middles, and entry software developers constantly. Your answers will be different and the codes will work if the coder pulls whatever code they pick as the answer from Stack Overflow to input the code they are working on.  


11. Now after reading this article I want to further my understanding of coding to better understand us humans. Humans are like computers we execute whatever our purpose is at that moment at hand. Understanding that a computer is only following the operations that the coder has to implement. Knowing that everything around me has some type of code to them and that this world is really just one big computer that is following code that we have written for ourselves to follow from day to day. That learning to code on a computer is just me practicing for when I get into the real world so I can be considered and part of this everlast movement of collecting, storing, using, and selling data. Finding new and innovative techniques to manage that new data that has new information that is waiting for me to file, recode and put into a new way to do it job again in getting more data. Learning to code is learning a second language but not to interact with another human, but this time to interact with a computer that will interact with you. This interaction can be seen in two ways. The front-end and the back-end. Front-end interaction with the computer will be the website page(s) that is being shown in the browser on your computer. This interaction is the one that the whole world will be seeing as soon as all of the bugs are fixed and things check out to be published to the net. The second interaction is where the foundation is built. It’s located in whatever text-editing software program the coder is using to code, it can be Atom, Sublime Text, Brackets, Notepad++, and Visual Studio Code. Those are some of the places that the actual code is going to be written so the computer can follow whatever operation that needs to be executed. This interaction is private to the public but public to those who can speak that same exact language. Many will understand the language that is being said just by looking at the code and those are your fellow coders. But most will not understand this conversation and those people are the ones who just can't read and understand coding without the use of the internet which shows the final products so it can be a website, App, web page, anything that the coder wants it to be. I will be learning the exact same language as the people who built platforms such as Facebook, Instagram, Snapchat, Soundcloud, Zoom, and many more. Some of these platforms don't speak the same language as the next but there are similarities and differences. Instagram speaks Python, Facebook speaks PHP and Python with more languages to it. Just looking at Instagram and Facebook coding languages coders can see the following commands for that code. Both platforms are social media outlooks that have different operating systems that make them function and look the way that they do. Again both platforms have similarities in their language functions, Facebook as well as Instagram both have an endless feel of scrolling down on someone’s newsfeed. Both understand the importance of images so both platforms engage with their audience. The difference from Facebook and Instagram is that Facebook gives their users the opportunity to make status on their page. While Instagram users don’t get the opportunity to create statues but they do have “Your Story” section which operates differently from Facebook status update. Still got the itch to create web pages and websites that are written in a well manner code like form meaning it easy for the eyes to read and comprehensible. The comments are placed in the right section so when fellow coders get to see the code they already know what each section of the code is doing for that part or section of the website. Creating content that goes well with the follow of the webpage, knowing when to implement animation to the site so when an interaction happens on the screen the user can get the thrill first hand. Knowing and understanding coding can turn a simple website into a whole experience just by adding special coding elements that are being written or worked on both front-end and back-end. Remember when it comes to coding there is the front-end portion which deals with the overall look of the website. Look at Facebook the front-end portion is what the everyday user gets to see which is the profile section, photo section, another person profile, and chat section. And the back-end portion helps the front-end part run the way the site does. The back-end details with the data part of web development, this deals with user logins, forgot password, saving messages, and the animation side as well. Without the back-end the site can send, hold, or retrieve data, without the front-end the site is plain to the eyes and boring to look at. Understand coding better so I can have a better understanding of the world because everything we see is based on some type of coding. And having the ability to create either a website, website, mobile application, or simply just creating to create. From start to finish, well written and executed coding for the world can see and start to create whatever they want. It just only a keyboard away from creating the next big application or just solving problems.